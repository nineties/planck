===============
Instruction Set
===============

Non-Branch Instructions
=======================

::

   +-------+----------+-----------------+------------------------------+
   | name  | 1st byte | following bytes |                              |
   +=======+==========+=================+==============================+
   | nop   | 00000000 |                 | do nothing                   |
   +-------+----------+-----------------+------------------------------+
   | phi   | 00000001 | see below       | lhs = phi(...)               |
   +-------+----------+-----------------+------------------------------+
   | move  | 00000010 | lhs,rhs         | lhs = rhs                    |
   +-------+----------+-----------------+------------------------------+
   | add   | 00000011 | lhs,arg0,arg1   | lhs = arg0 + arg1            |
   +-------+----------+-----------------+------------------------------+
   | sub   | 00000100 | lhs,arg0,arg1   | lhs = arg0 - arg1            |
   +-------+----------+-----------------+------------------------------+
   | mul   | 00000101 | lhs,arg0,arg1   | lhs = arg0 * arg1            |
   +-------+----------+-----------------+------------------------------+
   | div   | 00000110 | lhs,arg0,arg1   | lhs = arg0 / arg1            |
   +-------+----------+-----------------+------------------------------+
   | mod   | 00000111 | lhs,arg0,arg1   | lhs = arg0 mod arg1          |
   +-------+----------+-----------------+------------------------------+
   | and   | 00001000 | lhs,arg0,arg1   | lhs = arg0 & arg1            |
   +-------+----------+-----------------+------------------------------+
   | or    | 00001001 | lhs,arg0,arg1   | lhs = arg0 | arg1            |
   +-------+----------+-----------------+------------------------------+
   | xor   | 00001010 | lhs,arg0,arg1   | lhs = arg0 ^ arg1            |
   +-------+----------+-----------------+------------------------------+
   |       | 00001011 |                 |                              |
   |       |    -     |                 | reserved                     |
   |       | 00011111 |                 |                              |
   +-------+----------+-----------------+------------------------------+
   | lcall | 00100000 | see below       | local function call          |
   +-------+----------+-----------------+------------------------------+

Phi instruction::

   Phi instruction is a special purpose instruction used in SSA form.
   The semantics of

   lhs = phi(i0:rhs0, i1:rhs1, ...)

   is that when the index of preceding basic block is i0, the value of lhs is
   rhs0 and so on.

   +----------+~~~~~+~~~~~~~~~~+~~~~~~~~~~~~~~~~~+
   | 00000001 | lhs | uint (n) | n x (uint, rhs) |
   +----------+~~~~~+~~~~~~~~~~+~~~~~~~~~~~~~~~~~+

Function calls::

   * Local function call

   Calling a function in the same object file.

   lhs = f(arg0, arg1, ...)

   +----------+~~~~~+~~~~~~~~~~+~~~~~~~~~~+~~~~~~~~~~+
   | 00100000 | lhs | uint (f) | uint (n) | n x args |
   +----------+~~~~~+~~~~~~~~~~+~~~~~~~~~~+~~~~~~~~~~+

   f is the index of the function in the object file.


Branch Instructions
===================

::

   +---------------+----------+-----------------+------------------------------+
   | name          | 1st byte | following bytes |                              |
   +===============+==========+=================+==============================+
   | goto          | 10000000 | uint(i)         | do nothing, proceed to the   |
   |               |          |                 | basic block i.               |
   +---------------+----------+-----------------+------------------------------+
   | return        | 10000001 | operand         | return from function         |
   +---------------+----------+-----------------+------------------------------+

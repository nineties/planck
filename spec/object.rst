==================
Object File Format
==================

**The byte-order is always little endian.**

Encoding of Types
==================

+----------+------------------+-------------------------------------+
| 1st byte | following bytes  | type constructor                    |
+==========+==================+=====================================+
| 00000000 |                  | never                               |
+----------+------------------+-------------------------------------+
| 00000001 |                  | bool                                |
+----------+------------------+-------------------------------------+
| 00000010 |                  | char                                |
+----------+------------------+-------------------------------------+
| 00000011 |                  | u8                                  |
+----------+------------------+-------------------------------------+
| 00000100 |                  | i8                                  |
+----------+------------------+-------------------------------------+
| 00000101 |                  | u16                                 |
+----------+------------------+-------------------------------------+
| 00000110 |                  | i16                                 |
+----------+------------------+-------------------------------------+
| 00000111 |                  | u32                                 |
+----------+------------------+-------------------------------------+
| 00001000 |                  | i32                                 |
+----------+------------------+-------------------------------------+
| 00001001 |                  | u64                                 |
+----------+------------------+-------------------------------------+
| 00001010 |                  | i64                                 |
+----------+------------------+-------------------------------------+
| 00001011 |                  | f32                                 |
+----------+------------------+-------------------------------------+
| 00001100 |                  | f64                                 |
+----------+------------------+-------------------------------------+
| 00001101 |                  | str                                 |
+----------+------------------+-------------------------------------+
| 10001101 |                  | str                                 |
+----------+------------------+-------------------------------------+

Encoding of Values
==================

+----------+----------+------------------+-------------------------------------+
| type     | 1st byte | following bytes  |                                     |
+==========+==========+==================+=====================================+
| u8       | 0xxxxxxx |                  | 7-bit unsigned int                  |
+----------+----------+------------------+-------------------------------------+
| register | 1000xxxx |                  | Register whose index is upto 15     |
+----------+----------+------------------+-------------------------------------+
| tuple    | 1001xxxx | xxx objects      | Tuple whose length is upto 15       |
+----------+----------+------------------+-------------------------------------+
| str      | 101xxxxx | xxxxx bytes      | UTF-8 string upto 31 bytes          |
+----------+----------+------------------+-------------------------------------+
| true     | 11000000 |                  |                                     |
+----------+----------+------------------+-------------------------------------+
| false    | 11000001 |                  |                                     |
+----------+----------+------------------+-------------------------------------+
| u8       | 11000010 | 1 byte           | 8-bit unsigned int                  |
+----------+----------+------------------+-------------------------------------+
| i8       | 11000011 | 1 byte           | 8-bit signed int                    |
+----------+----------+------------------+-------------------------------------+
| u16      | 11000100 | 2 byte           | 16-bit unsigned int                 |
+----------+----------+------------------+-------------------------------------+
| i16      | 11000101 | 2 byte           | 16-bit signed int                   |
+----------+----------+------------------+-------------------------------------+
| u32      | 11000110 | 4 byte           | 32-bit unsigned int                 |
+----------+----------+------------------+-------------------------------------+
| i32      | 11000111 | 4 byte           | 32-bit signed int                   |
+----------+----------+------------------+-------------------------------------+
| u64      | 11001000 | 8 byte           | 64-bit unsigned int                 |
+----------+----------+------------------+-------------------------------------+
| i64      | 11001001 | 8 byte           | 64-bit signed int                   |
+----------+----------+------------------+-------------------------------------+
| f32      | 11001010 | 4 byte           | IEEE754 single-precision float      |
+----------+----------+------------------+-------------------------------------+
| f64      | 11001011 | 8 byte           | IEEE754 double-precision float      |
+----------+----------+------------------+-------------------------------------+
| char     | 11001100 | uint object      | UTF-8 character                     |
+----------+----------+------------------+-------------------------------------+
| str      | 11001101 | 1 byte + data    | UTF-8 string whose length is        |
|          |          |                  | upto 2^8-1 bytes                    |
+----------+----------+------------------+-------------------------------------+
| str      | 11001110 | 2 byte + data    | UTF-8 string whose length is        |
|          |          |                  | upto 2^16-1 bytes                   |
+----------+----------+------------------+-------------------------------------+
| str      | 11001111 | 4 byte + data    | UTF-8 string whose length is        |
|          |          |                  | upto 2^32-1 bytes                   |
+----------+----------+------------------+-------------------------------------+
| tuple    | 11010000 | 1 byte + objects | Tuple whose length is upto 255      |
+----------+----------+------------------+-------------------------------------+
| array    | 11010001 | 1 byte + objects | Array whose length is upto 255      |
+----------+----------+------------------+-------------------------------------+
| array    | 11010010 | 2 byte + objects | Array whose length is upto 2^16-1   |
+----------+----------+------------------+-------------------------------------+
| array    | 11010011 | 4 byte + objects | Array whose length is upto 2^32-1   |
+----------+----------+------------------+-------------------------------------+
| register | 11010100 | 1 byte           | Register whose index is upto 255    |
+----------+----------+------------------+-------------------------------------+
| register | 11010101 | 2 byte           | Register whose index is upto 2^16-1 |
+----------+----------+------------------+-------------------------------------+
| i8       | 111xxxxx |                  | 5-bit signed int                    |
+----------+----------+------------------+-------------------------------------+


File Format
===========

+--------------+----------------------------------+
| field length | content                          |
+==============+==================================+
| 4 bytes      | File magic "PLNK"                |
+--------------+----------------------------------+
| u32          | Data size (N)                    |
+--------------+----------------------------------+
| N bytes      | Sections                         |
+--------------+----------------------------------+

Section Format
==============

+--------------+----------------------------------+
| field length | content                          |
+==============+==================================+
| 4 bytes      | Section type                     |
|              |                                  |
|              | 4 ascii characters like "Code"   |
+--------------+----------------------------------+
| u32          | Section size (N)                 |
+--------------+----------------------------------+
| N bytes      | Section dependent data           |
+--------------+----------------------------------+
| (N - 3)/4*4  | Padding to fit 4-byte boundary   |
| bytes        |                                  |
+--------------+----------------------------------+

"Name" - Name Table
-------------------

Identifiers used for variables, constants, functions, types, etc.

+--------------+----------------------------------+
| field length | content                          |
+==============+==================================+
| u32          | Name count (N)                   |
+--------------+----------------------------------+
| ...          | Name 0 (null-terminated string)  |
+--------------+----------------------------------+
| ...          | ...                              |
+--------------+----------------------------------+
| ...          | Name N-1                         |
+--------------+----------------------------------+

"ExpT" - Export Table
---------------------

Table of variables, constants, functions, types, etc. which are exported.

+--------------+----------------------------------+
| field length | content                          |
+==============+==================================+
| u32          | Entry count (N)                  |
+--------------+----------------------------------+
| ...          | N entries                        |
+--------------+----------------------------------+

Each entry has following format.

+--------------+----------------------------------+
| field length | content                          |
+==============+==================================+
| u24          | Index of Name                    |
+--------------+----------------------------------+
| u8           | Entry type                       |
|              |                                  |
|              | * 'V': variable                  |
|              | * 'C': constant                  |
|              | * 'F': function                  |
|              | * 'G': generic function          |
|              | * 'T': type                      |
+--------------+----------------------------------+
| u32          | Index of definition              |
+--------------+----------------------------------+

"Func" - Function Table
-----------------------

+--------------+----------------------------------+
| field length | content                          |
+==============+==================================+
| u32          | Function count (N)               |
+--------------+----------------------------------+
| ...          | N entries                        |
+--------------+----------------------------------+

Each entry has following format.

+--------------+----------------------------------+
| field length | content                          |
+==============+==================================+
| u32          | Function count (N)               |
+--------------+----------------------------------+
| ...          | Byte-encoding of function type   |
+--------------+----------------------------------+
| ...          | Byte-encoding of basic block 0   |
+--------------+----------------------------------+
| ...          |                                  |
+--------------+----------------------------------+
| ...          | Byte-encoding of basic block N-1 |
+--------------+----------------------------------+
